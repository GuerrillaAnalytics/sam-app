AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-app

  Sample SAM Template for sam-app


# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 60
    Runtime: python3.7

Resources:


  RoleLambdaExecution:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: "sts:AssumeRole"

  RoleStatesExecution:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - !Sub states.${AWS::Region}.amazonaws.com
            Action: "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: StatesExecutionPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "lambda:InvokeFunction"
                Resource: "*"

  StartStateMachineFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Description: A lambda to parse and set up state machine steps
    Properties:
      Tags:

      CodeUri: start_state_machine/
      Handler: app.lambda_handler
      MemorySize: 128
      Timeout: 60
      Events:
        Start:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /start
            Method: get

  HelloWorldFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Description: A simple hello world lambda
    Properties:
      Tags:
        
      CodeUri: hello_world/
      Handler: app.lambda_handler
      MemorySize: 128
      Timeout: 60
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /hello
            Method: get
      Layers:
        - !Ref DataScienceLayer

  DataScienceLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: data-science-layer
      Description: Lambda Layer for Data Science libraries
      ContentUri: ./build/data-science-layer  # This must point to a 'python root' folder where you have pip installed libraries
      CompatibleRuntimes:
        - python3.7
      LicenseInfo: MIT
      RetentionPolicy: Retain

  MyBucket:
    # AWS CloudFormation resource to create an S3 bucket
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: sam-app-data
      Tags:
        - Key: "project"
          Value: "sam-app"
      PublicAccessBlockConfiguration:
        BlockPublicAcls : true
        BlockPublicPolicy : true
        IgnorePublicAcls : true
        RestrictPublicBuckets : true

  HelloWorldStateMachine:
    # Hard coded inputs parameters are specified here
    # See examples here
    # https://docs.aws.amazon.com/step-functions/latest/dg/input-output-example.html
    Type: "AWS::StepFunctions::StateMachine"
    Properties:
      DefinitionString:
        Fn::Sub:
          |-
            {
              "Comment": "A Hello World step function using an AWS Lambda function",
              "StartAt": "Step1Test",
              "States": {
                "Step1Test": {
                  "Type": "Task",
                  "Resource": "${StartStateMachineFunction.Arn}",
                  "Next": "Step2Test"
                },
                  "Step2Test": {
                  "Type": "Task",
                  "Resource": "${HelloWorldFunction.Arn}",
                  "End": true
                }
              }
            }
      RoleArn: !GetAtt [ RoleStatesExecution, Arn ]
      StateMachineName: data-pipeline

  LogGroupHelloWorld:
    Type: AWS::Logs::LogGroup
    DependsOn: HelloWorldStateMachine
    Properties:
      RetentionInDays: 1

# The optional Outputs section declares output values that you can import
# into other stacks (to create cross-stack references), return in
# response (to describe stack calls), or view on the AWS CloudFormation
# console
Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  HelloWorldApi:
    Description: "API Gateway endpoint URL for Prod stage lambda for Hello World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"

  HelloWorldFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt HelloWorldFunction.Arn
  StartStateMachineFunction:
    Description: "Hello World Lambda at start of state machine"
    Value: !GetAtt StartStateMachineFunction.Arn
    #  HelloWorldFunctionIamRole:
    #    Description: "Implicit IAM Role created for Hello World function"
    #    Value: !GetAtt HelloWorldFunctionRole.Arn
